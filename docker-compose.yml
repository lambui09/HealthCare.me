version: '3'
services:
  api-main:
    container_name: api-main
    build:
      context: ./packages/main
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules/
      - ./packages/main:/app/
    environment:
      PORT: 3000
      MONGO_URI: mongodb://mongo:27017/health-care
      JWT_SECRET_KEY: secretKey
      TIME_EXPIRE_TOKEN: 1y
      API_RECOMMEND_URL: http://api-recommend:3005
    depends_on:
      - mongo
      - api-recommend
    networks:
      - health-care_network
  api-recommend:
    container_name: api-recommend
    build:
      context: ./packages/recommend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3005:3005"
    volumes:
      - /app/node_modules/
      - ./packages/recommend/:/app
    environment:
      PORT: 3005
      MONGO_URI: mongodb://mongo:27017/health-care
      NEO4J_URL: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: test
    depends_on:
      - neo4j
      - mongo
    networks:
      - health-care_network
  api-transfer:
    container_name: transfer
    build:
      context: ./packages/transfer
      dockerfile: Dockerfile
    restart: always
    volumes:
      - /app/node_modules/
      - ./packages/transfer:/app
    environment:
      PORT: 3010
      MONGO_URI: mongodb://mongo:27017/health-care
      NEO4J_URL: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: test
    depends_on:
      - neo4j
      - mongo
    networks:
      - health-care_network
  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./db/mongo:/data/db
    networks:
      - health-care_network
  neo4j:
    container_name: neo4j
    image: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./db/neo4j/:/data/
    environment:
      - NEO4J_AUTH=neo4j/test
    restart: always
    networks:
      - health-care_network
networks:
  health-care_network:
    driver: bridge